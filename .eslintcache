[{"/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/index.js":"1","/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/components/Navbar.jsx":"2","/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/components/CountriesList.jsx":"3","/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/components/CountryDetails.jsx":"4","/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/App.js":"5"},{"size":372,"mtime":1632467025017,"results":"6","hashOfConfig":"7"},{"size":305,"mtime":1632467008612,"results":"8","hashOfConfig":"7"},{"size":982,"mtime":1632467001438,"results":"9","hashOfConfig":"7"},{"size":2012,"mtime":1632466993905,"results":"10","hashOfConfig":"7"},{"size":835,"mtime":1632467016303,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m1hww7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/index.js",[],"/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/components/Navbar.jsx",["23"],"/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/components/CountriesList.jsx",[],"/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/components/CountryDetails.jsx",["24","25","26"],"import { Link } from 'react-router-dom';\nimport countriesData from '../countries.json';\nimport { useState } from 'react';\n\nexport default function CountryDetails(props) {\n  const { countries } = props;\n  const currentCountryId = props.match.params.alpha3code;\n\n  const foundCountry = countries.find((countrieObj) => {\n    return countrieObj.alpha3Code === currentCountryId;\n  });\n\n  console.log('found country', foundCountry);\n\n  return (\n    <div>\n      <img\n        src={\n          'https:www.countryflags.io/' + countries.alpha2Code + '/flat/32.png'\n        }\n        className=\"countryImage\"\n      />\n      <h1>{countries.name}</h1>\n      <div className=\"col-7\">\n        <img src=\"https://restcountries.eu/data/fra.svg\" alt=\"country flag\" />\n        <h1>{foundCountry.name}</h1>\n        <table className=\"table\">\n          <thead></thead>\n          <tbody>\n            <tr>\n              <td>Capital</td>\n              <td>{foundCountry.capital}</td>\n            </tr>\n            <tr>\n              <td>Area</td>\n              <td>\n                {foundCountry.area}\n                <sup>2</sup>\n              </td>\n            </tr>\n            <tr>\n              <td>Borders</td>\n              <td>\n                {foundCountry.borders.map((countryCode, i) => {\n                  return (\n                    <li key={'bordersid' + i}>\n                      <Link to={`/${countryCode}`}>\n                        {props.countries.map((country, i) => {\n                          if (country.alpha3Code === countryCode) {\n                            console.log('this is the country', country);\n                            return <p key={'border' + i}>{country.name}</p>;\n                          } else {\n                            return null;\n                          }\n                        })}\n                      </Link>\n                    </li>\n                  );\n                })}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","/Users/jesse/Desktop/globtrotterslabs/lab-wiki-countries/src/App.js",["27"],{"ruleId":"28","severity":1,"message":"29","line":1,"column":16,"nodeType":"30","messageId":"31","endLine":1,"endColumn":23},{"ruleId":"28","severity":1,"message":"32","line":2,"column":8,"nodeType":"30","messageId":"31","endLine":2,"endColumn":21},{"ruleId":"28","severity":1,"message":"33","line":3,"column":10,"nodeType":"30","messageId":"31","endLine":3,"endColumn":18},{"ruleId":"34","severity":1,"message":"35","line":17,"column":7,"nodeType":"36","endLine":22,"endColumn":9},{"ruleId":"28","severity":1,"message":"37","line":11,"column":23,"nodeType":"30","messageId":"31","endLine":11,"endColumn":37},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'countriesData' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setCountryData' is assigned a value but never used."]